/*
 * Created on 15 Oct 2015 ( Time 20:28:30 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package net.atos.transport.business.service.mapping;

import net.atos.transport.entity.FaresCheckingExclusion;
import net.atos.transport.entity.jpa.FaresCheckingExclusionEntity;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class FaresCheckingExclusionServiceMapper extends AbstractServiceMapper
{

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public FaresCheckingExclusionServiceMapper()
    {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'FaresCheckingExclusionEntity' to 'FaresCheckingExclusion'
     * 
     * @param faresCheckingExclusionEntity
     */
    public FaresCheckingExclusion mapFaresCheckingExclusionEntityToFaresCheckingExclusion(
            FaresCheckingExclusionEntity faresCheckingExclusionEntity)
    {
        if (faresCheckingExclusionEntity == null)
        {
            return null;
        }

        // --- Generic mapping
        return map(faresCheckingExclusionEntity, FaresCheckingExclusion.class);

    }

    /**
     * Mapping from 'FaresCheckingExclusion' to 'FaresCheckingExclusionEntity'
     * 
     * @param faresCheckingExclusion
     * @param faresCheckingExclusionEntity
     */
    public void mapFaresCheckingExclusionToFaresCheckingExclusionEntity(FaresCheckingExclusion faresCheckingExclusion,
            FaresCheckingExclusionEntity faresCheckingExclusionEntity)
    {
        if (faresCheckingExclusion == null)
        {
            return;
        }

        // --- Generic mapping
        map(faresCheckingExclusion, faresCheckingExclusionEntity);

    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ModelMapper getModelMapper()
    {
        return modelMapper;
    }

    protected void setModelMapper(ModelMapper modelMapper)
    {
        this.modelMapper = modelMapper;
    }

}
